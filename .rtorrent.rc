encoding_list = UTF-8

# Minumum amount of peers to connect per torrent, if available.
min_peers = 10
# Minumum amount of peers to connect per torrent.
max_peers = 30
# Same as above but for seeding completed torrents (-1 = same as downloading)
min_peers_seed = 5
max_peers_seed = 20
# Maximum number of simultanious uploads per torrent.
max_uploads = 5
# Global download rate in KiB. "0" for unlimited.
download_rate = 0
# Global upload rate in KiB. "0" for unlimited.
upload_rate = 80


# Default session directory. Make sure you don't run multiple instance
# of rtorrent using the same session directory. Perhaps using a
# relative path?
session = /opt/home/.rtsessions
# Default directory to save downloaded files. Note it doesn't support
# space yet.
directory = /opt/home/Downloads/

schedule = tied_directory,5,5,start_tied=
schedule = watch_directory_1,10,10,"load_start=/opt/home/Torrents/*.torrent,d.set_custom1=/opt/home/Seeds/"
schedule = untied_directory,60,60,stop_untied=/opt/home/Torrents/*.torrent
schedule = watch_directory_2,10,10,"load_start=/opt/home/Torrents/H/*.torrent,d.set_custom1=/opt/home/Seeds/H/"
schedule = untied_directory,60,60,stop_untied=/opt/home/Torrents/H/*.torrent
schedule = watch_directory_3,10,10,"load_start=/opt/home/Torrents/PT/*.torrent,d.set_custom1=/opt/home/Seeds/PT/"
schedule = untied_directory,60,60,stop_untied=/opt/home/Torrents/PT/*.torrent
system.method.set_key =event.download.finished,move_complete,"d.set_directory=$d.get_custom1= ;execute=mv,-u,$d.get_base_path=,$d.get_custom1="
# system.method.insert=checkdirs1,simple,"not=\"$equal={d.get_custom1=,d.get_base_path=}\""
# system.method.insert=movecheck1,simple,"and={checkdirs1=,d.get_complete=,d.get_custom1=}"
# system.method.insert=movedir1,simple,"d.set_directory=$d.get_custom1=;execute=mv,-u,$d.get_base_path=,$d.get_custom1=;d.set_custom1=;d.stop=;d.start="
# system.method.set_key=event.download.hash_done,move_hashed1,"branch={$movecheck1=,movedir1=}"

schedule = low_diskspace,5,60,close_low_diskspace=100M

# scedule an unlimited download throttle at 00:15
#schedule = throttle_1,00:00:15,24:00:00,download_rate=0
# scedule an download throttle at 06:00
#schedule = throttle_2,06:00:00,24:00:00,download_rate=50

# Switch between two ip's every 5 seconds.
#schedule = "ip_tick1,5,10,ip=torretta"
#schedule = "ip_tick2,10,10,ip=lampedusa"
# Remove a scheduled event.
#schedule_remove = "ip_tick1"

# Stop torrents when reaching upload ratio in percent,
# when also reaching total upload in bytes, or when
# reaching final upload ratio in percent.
# example: stop at ratio 2.0 with at least 200 MB uploaded, or else ratio 20.0
#schedule = ratio,60,60,"stop_on_ratio=200,200M,2000"
#schedule = ratio,30,60,stop_on_ratio=200

# The ip address reported to the tracker.
#ip = rakshasa
# The ip address the listening socket and outgoing connections is
# bound to.
#bind = rakshasa
# Alternative calls to bind and ip that should handle dynamic ip's.
#schedule = ip_tick,0,1800,ip=rakshasa
#schedule = bind_tick,0,1800,bind=rakshasa


# Encryption options, set to none (default) or any combination of the following:
# allow_incoming, try_outgoing, require, require_RC4, enable_retry, prefer_plaintext
#
# The example value allows incoming encrypted connections, starts unencrypted
# outgoing connections but retries with encryption if they fail, preferring
# plaintext to RC4 encryption after the encrypted handshake
#
encryption = allow_incoming,try_outgoing,enable_retry,prefer_plaintext

# Port range to use for listening.
port_range = 51780-51780
# Start opening ports at a random position within the port range.
port_random = no
# Set whetever the client should try to connect to UDP trackers.
use_udp_trackers = yes
# Enable DHT support for trackerless torrents or when all trackers are down.
# May be set to "disable" (completely disable DHT), "off" (do not start DHT),
# "auto" (start and stop DHT as needed), or "on" (start DHT immediately).
# The default is "off". For DHT to work, a session directory must be defined.
dht = on
# UDP port to use for DHT.
dht_port = 6881
# Enable peer exchange (for torrents not marked private)
peer_exchange = yes


# Check hash for finished torrents. Might be usefull until the bug is
# fixed that causes lack of diskspace not to be properly reported.
check_hash = no
#
# Do not modify the following parameters unless you know what you're doing.
#

# Hash read-ahead controls how many MB to request the kernel to read
# ahead. If the value is too low the disk may not be fully utilized,
# while if too high the kernel might not be able to keep the read
# pages in memory thus end up trashing.
#hash_read_ahead = 10

# Interval between attempts to check the hash, in milliseconds.
#hash_interval = 100

# Number of attempts to check the hash while using the mincore status,
# before forcing. Overworked systems might need lower values to get a
# decent hash checking rate.
#hash_max_tries = 10

# Max number of files to keep open simultaniously.
max_open_files = 80

# Number of sockets to simultaneously keep open.
#max_open_sockets = <no default>
